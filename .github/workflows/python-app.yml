  # This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  workflow_dispatch:
  repository_dispatch:
    types: [wwwdeploy]
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: auth
      env:
        AUTH: ${{ secrets.AUTH }}
      shell: bash
      run: |
          mkdir config
          echo "$AUTH" >> config/auth.json
          cat config/auth.json

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build
      continue-on-error: true
      env:
        HEADLESS: "42"
      run: |
        if ! [ -d web/templates/rendered ]; then mkdir -p web/templates/rendered; fi
        python ./app.py&
        sleep 10 && curl -L http://localhost:5000/ 
        sleep 10 && find . -type f -iname '*html'
    - name: check
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        if ! [ -d static ]; then mkdir -p static/assets; fi
        cp -R web/static/assets/* static/assets/
        echo $(date) > static/ver
        echo "$SSH_KEY" >> id_rsa
        chmod 600 id_rsa
        cp web/templates/rendered/* static/
        cd static
        find . -mindepth 1 -maxdepth 1 -iname '*html' | while read -r F; do NF=$(echo $F | sed 's/.html/-parsed.html/g'); cp $F $NF; done
        sed -i 's/=\"assets/=\"https:\/\/dolly3.pknw1.co.uk\/assets/g' '*parsed.html'
        #scp -r -o "StrictHostKeyChecking=no" -P 69 -i ./id_rsa web/static/assets wwwxfr@ks5.pknw1.co.uk:/media/www/dolly/www/ 
        #scp -r -o "StrictHostKeyChecking=no" -P 69 -i ./id_rsa web/templates/rendered/index* wwwxfr@ks5.pknw1.co.uk:/media/www/dolly/www/
        #cd static
        #tar -zcvf ../static.tgz *

    - name: xfr
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        cd static
        tar -zcvf ../static-xfr.tgz *
        cd ..
        scp -r -o "StrictHostKeyChecking=no" -P 69 -i ./id_rsa static-xfr.tgz wwwxfr@ks5.pknw1.co.uk:/media/www/dolly/www/

    - name: unpack
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        ssh -p 69 -o "StrictHostKeyChecking=no" -i ./id_rsa wwwxfr@ks5.pknw1.co.uk -C 'cd www && find . -type f -iname '*tgz' -mmin -10 -exec tar zxvf "{}" \;'

        

    - name: Archive
      uses: actions/upload-artifact@v4
      with:
        name: static
        path: static-xfr.tgz





